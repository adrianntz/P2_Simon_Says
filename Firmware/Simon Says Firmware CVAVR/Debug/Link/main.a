;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void putchar1(char c)
; 0000 0030 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0031 while ((UCSR1A & DATA_REGISTER_EMPTY)==0);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	c -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0032 UDR1=c;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0033 }
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;void All_LED_Shut_Off()
; 0000 003E {
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 003F LED1=0;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0040 LED2=0;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0041 LED3=0;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0042 LED4=0;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0043 }
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;void All_LED_On()
; 0000 0046 {
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0047 LED1=1;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0048 LED2=1;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0049 LED3=1;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 004A LED4=1;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 004B }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;void generate_Current_Level()
; 0000 004E {
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 004F 
; 0000 0050 unsigned int i;
; 0000 0051 for ( i = 0; i < MAX_LEVEL; i++)
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;	i -> R16,R17
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0052 Current_Level[i] = rand() % 4;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0055 }
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;void show_Current_Level()
; 0000 0058 {
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0059 unsigned int i;
; 0000 005A All_LED_Shut_Off();
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;	i -> R16,R17
;PCODE: $00000057 VOL: 0
; 0000 005B 
; 0000 005C for ( i = 0; i < level; i++)
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 005D {
; 0000 005E switch(Current_Level[i])
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 005F {
; 0000 0060 case 0:
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0061 LED1=1;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0062 delay_ms(Sequence_Step_Delay);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0063 LED1=0;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0064 delay_ms(200);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0065 break;
;PCODE: $00000071 VOL: 0
; 0000 0066 case 1:
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0067 LED2=1;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0068 delay_ms(Sequence_Step_Delay);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0069 LED2=0;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 006A delay_ms(200);
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 006B break;
;PCODE: $0000007F VOL: 0
; 0000 006C case 2:
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 006D LED3=1;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 006E delay_ms(Sequence_Step_Delay);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 006F LED3=0;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0070 delay_ms(200);
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0071 break;
;PCODE: $0000008D VOL: 0
; 0000 0072 case 3:
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0073 LED4=1;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0074 delay_ms(Sequence_Step_Delay);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0075 LED4=0;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0076 delay_ms(200);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0077 break;
;PCODE: $0000009B VOL: 0
; 0000 0078 }
;PCODE: $0000009C VOL: 0
; 0000 0079 
; 0000 007A }
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 007B }
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;void right_Current_Level() {
; 0000 007D void right_Current_Level() {
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 007E All_LED_Shut_Off();
;PCODE: $000000A7 VOL: 0
; 0000 007F delay_ms(250);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0080 
; 0000 0081 All_LED_On();
;PCODE: $000000AB VOL: 0
; 0000 0082 delay_ms(500);
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0083 
; 0000 0084 All_LED_Shut_Off();
;PCODE: $000000AE VOL: 0
; 0000 0085 delay_ms(500);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0086 
; 0000 0087 if (level < MAX_LEVEL) {
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0088 level++;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0089 }
; 0000 008A Sequence_Step_Delay -= 50; //increases difficulty
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 008B }
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;void wrong_Current_Level()
; 0000 008E {
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 008F unsigned int i;
; 0000 0090 for ( i = 0; i < 3; i++)
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;	i -> R16,R17
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0091 {
; 0000 0092 All_LED_On();
;PCODE: $000000CA VOL: 0
; 0000 0093 delay_ms(250);
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0094 All_LED_Shut_Off();
;PCODE: $000000CE VOL: 0
; 0000 0095 delay_ms(250);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0096 }
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0097 
; 0000 0098 level = 1;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0099 Sequence_Step_Delay = 1000;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 009A }
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;void get_Current_Level()
; 0000 009D {
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 009E int flag = 0; //flag correct Current_Level
; 0000 009F unsigned int i;
; 0000 00A0 
; 0000 00A1 for (i = 0; i < level; i++) {
;PCODE: $000000E0 VOL: 0
;	flag -> R16,R17
;	i -> R18,R19
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 00A2 flag = 0;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 00A3 
; 0000 00A4 while (flag == 0)
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 00A5 {
; 0000 00A6 
; 0000 00A7 if (!SW1)
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00A8 {
; 0000 00A9 LED1=1;
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 00AA delay_ms(Sequence_Step_Delay);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 00AB Sequence_Input[i] = 0;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00AC flag = 1;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 00AD delay_ms(200);
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00AE 
; 0000 00AF if (Sequence_Input[i] != Current_Level[i]) {
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00B0 wrong_Current_Level();
;PCODE: $0000010F VOL: 0
; 0000 00B1 return;
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 00B2 }
; 0000 00B3 LED1=0;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00B4 }
; 0000 00B5 
; 0000 00B6 if (!SW2)
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00B7 {
; 0000 00B8 LED2=1;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00B9 delay_ms(Sequence_Step_Delay);
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 00BA Sequence_Input[i] = 1;
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 00BB flag = 1;
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 00BC delay_ms(200);
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00BD 
; 0000 00BE if (Sequence_Input[i] != Current_Level[i]) {
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00BF wrong_Current_Level();
;PCODE: $00000135 VOL: 0
; 0000 00C0 return;
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00C1 }
; 0000 00C2 LED2=0;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00C3 }
; 0000 00C4 
; 0000 00C5 if (!SW3)
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00C6 {
; 0000 00C7 LED3=1;
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00C8 delay_ms(Sequence_Step_Delay);
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00C9 Sequence_Input[i] = 2;
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0000 00CA flag = 1;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00CB delay_ms(200);
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00CC 
; 0000 00CD if (Sequence_Input[i] != Current_Level[i]) {
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00CE wrong_Current_Level();
;PCODE: $0000015B VOL: 0
; 0000 00CF return;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00D0 }
; 0000 00D1 LED3=0;
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 00D2 }
; 0000 00D3 
; 0000 00D4 if (!SW4) {
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 00D5 LED4=1;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 00D6 delay_ms(Sequence_Step_Delay);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 00D7 Sequence_Input[i] = 3;
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 00D8 flag = 1;
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 00D9 delay_ms(200);
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00DA 
; 0000 00DB if (Sequence_Input[i] != Current_Level[i]) {
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 00DC wrong_Current_Level();
;PCODE: $00000181 VOL: 0
; 0000 00DD return;
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00DE }
; 0000 00DF LED4=0;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00E0 }
; 0000 00E1 }
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00E2 }
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 00E3 right_Current_Level();
;PCODE: $00000190 VOL: 0
; 0000 00E4 }
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;void Led_Flash()
; 0000 00E7 {
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00E8 LED1=1;
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
; 0000 00E9 delay_ms(100);
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00EA LED1=0;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 00EB delay_ms(100);
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0000 00EC 
; 0000 00ED LED2=1;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 00EE delay_ms(100);
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00EF LED2=0;
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 00F0 delay_ms(100);
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 00F1 
; 0000 00F2 LED3=1;
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 00F3 delay_ms(100);
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 00F4 LED3=0;
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00F5 delay_ms(100);
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 00F6 
; 0000 00F7 LED4=1;
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0000 00F8 delay_ms(100);
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00F9 LED4=0;
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 00FA delay_ms(100);
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 00FB }
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;void main(void)
; 0000 0100 {
;PCODE: $000001C1 VOL: 0
; 0000 0101 // Declare your local variables here
; 0000 0102 // Crystal Oscillator division factor: 1
; 0000 0103 #pragma optsize-
; 0000 0104 CLKPR=(1<<CLKPCE);
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 0105 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0106 #ifdef _OPTIMIZE_SIZE_
; 0000 0107 #pragma optsize+
; 0000 0108 #endif
; 0000 0109 
; 0000 010A // Input/Output Ports initialization
; 0000 010B // Port A initialization
; 0000 010C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 010D DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 010E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 010F PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 0110 
; 0000 0111 // Port B initialization
; 0000 0112 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0113 DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 0114 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=P Bit2=P Bit1=P Bit0=P
; 0000 0115 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (1<<PORTB1) | (1<<PORTB0);
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 0116 
; 0000 0117 // Port C initialization
; 0000 0118 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0119 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 011A // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 011B PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 011C 
; 0000 011D // Port D initialization
; 0000 011E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 011F DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 0120 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0121 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 0122 
; 0000 0123 // Timer/Counter 0 initialization
; 0000 0124 // Clock source: System Clock
; 0000 0125 // Clock value: Timer 0 Stopped
; 0000 0126 // Mode: Normal top=0xFF
; 0000 0127 // OC0A output: Disconnected
; 0000 0128 // OC0B output: Disconnected
; 0000 0129 TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 012A TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 012B TCNT0=0x00;
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 012C OCR0A=0x00;
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 012D OCR0B=0x00;
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 012E 
; 0000 012F // Timer/Counter 1 initialization
; 0000 0130 // Clock source: System Clock
; 0000 0131 // Clock value: Timer1 Stopped
; 0000 0132 // Mode: Normal top=0xFFFF
; 0000 0133 // OC1A output: Disconnected
; 0000 0134 // OC1B output: Disconnected
; 0000 0135 // Noise Canceler: Off
; 0000 0136 // Input Capture on Falling Edge
; 0000 0137 // Timer1 Overflow Interrupt: Off
; 0000 0138 // Input Capture Interrupt: Off
; 0000 0139 // Compare A Match Interrupt: Off
; 0000 013A // Compare B Match Interrupt: Off
; 0000 013B TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 013C TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 013D TCNT1H=0x00;
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 013E TCNT1L=0x00;
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 013F ICR1H=0x00;
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0140 ICR1L=0x00;
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 0141 OCR1AH=0x00;
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 0142 OCR1AL=0x00;
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 0143 OCR1BH=0x00;
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 0144 OCR1BL=0x00;
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 0145 
; 0000 0146 // Timer/Counter 2 initialization
; 0000 0147 // Clock source: System Clock
; 0000 0148 // Clock value: Timer2 Stopped
; 0000 0149 // Mode: Normal top=0xFF
; 0000 014A // OC2A output: Disconnected
; 0000 014B // OC2B output: Disconnected
; 0000 014C ASSR=(0<<EXCLK) | (0<<AS2);
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 014D TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 014E TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 014F TCNT2=0x00;
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 0150 OCR2A=0x00;
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 0151 OCR2B=0x00;
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 0152 
; 0000 0153 // Timer/Counter 0 Interrupt(s) initialization
; 0000 0154 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 0155 
; 0000 0156 // Timer/Counter 1 Interrupt(s) initialization
; 0000 0157 TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 0158 
; 0000 0159 // Timer/Counter 2 Interrupt(s) initialization
; 0000 015A TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 015B 
; 0000 015C // External Interrupt(s) initialization
; 0000 015D // INT0: Off
; 0000 015E // INT1: Off
; 0000 015F // INT2: Off
; 0000 0160 // Interrupt on any change on pins PCINT0-7: Off
; 0000 0161 // Interrupt on any change on pins PCINT8-15: Off
; 0000 0162 // Interrupt on any change on pins PCINT16-23: Off
; 0000 0163 // Interrupt on any change on pins PCINT24-31: Off
; 0000 0164 EICRA=(0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 0165 EIMSK=(0<<INT2) | (0<<INT1) | (0<<INT0);
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0166 PCICR=(0<<PCIE3) | (0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 0167 
; 0000 0168 // USART0 initialization
; 0000 0169 // USART0 disabled
; 0000 016A UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 016B 
; 0000 016C // USART1 initialization
; 0000 016D // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 016E // USART1 Receiver: Off
; 0000 016F // USART1 Transmitter: On
; 0000 0170 // USART1 Mode: Asynchronous
; 0000 0171 // USART1 Baud Rate: 9600
; 0000 0172 UCSR1A=(0<<RXC1) | (0<<TXC1) | (0<<UDRE1) | (0<<FE1) | (0<<DOR1) | (0<<UPE1) | (0<<U2X1) | (0<<MPCM1);
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 0173 UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (1<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 0174 UCSR1C=(0<<UMSEL11) | (0<<UMSEL10) | (0<<UPM11) | (0<<UPM10) | (0<<USBS1) | (1<<UCSZ11) | (1<<UCSZ10) | (0<<UCPOL1);
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 0175 UBRR1H=0x00;
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
; 0000 0176 UBRR1L=0x81;
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 0177 
; 0000 0178 // Analog Comparator initialization
; 0000 0179 // Analog Comparator: Off
; 0000 017A // The Analog Comparator's positive input is
; 0000 017B // connected to the AIN0 pin
; 0000 017C // The Analog Comparator's negative input is
; 0000 017D // connected to the AIN1 pin
; 0000 017E ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 017F ADCSRB=(0<<ACME);
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
; 0000 0180 // Digital input buffer on AIN0: On
; 0000 0181 // Digital input buffer on AIN1: On
; 0000 0182 DIDR1=(0<<AIN0D) | (0<<AIN1D);
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 0183 
; 0000 0184 // ADC initialization
; 0000 0185 // ADC disabled
; 0000 0186 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 0187 
; 0000 0188 // SPI initialization
; 0000 0189 // SPI disabled
; 0000 018A SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 018B 
; 0000 018C // TWI initialization
; 0000 018D // TWI disabled
; 0000 018E TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 018F 
; 0000 0190 while (1)
;PCODE: $00000224 VOL: 0
; 0000 0191 {
; 0000 0192 if (level == 1)
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
; 0000 0193 {
; 0000 0194 generate_Current_Level();
;PCODE: $00000228 VOL: 0
; 0000 0195 Led_Flash();
;PCODE: $00000229 VOL: 0
; 0000 0196 }
; 0000 0197 
; 0000 0198 if ( (SW1==0) || (level != 1))
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 0199 {
; 0000 019A show_Current_Level();
;PCODE: $00000233 VOL: 0
; 0000 019B get_Current_Level();
;PCODE: $00000234 VOL: 0
; 0000 019C }
; 0000 019D 
; 0000 019E }
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0000 019F 
; 0000 01A0 }
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
